<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>Kinematics plugin</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1>Kinematics Plugin</h1>

<p>The <a href="coppeliaKinematicsRoutines.htm">Coppelia Kinematics Routines</a> API functions are also available within CoppeliaSim via the kinematics plugin, and can be recognized from their simIK-prefix: </p>
<li><a href="simExtIK-api-alphabetic.htm">Kinematics plugin API list (in alphabetical order)</a></li>
<li><a href="simExtIK-api-category.htm">Kinematics plugin API list (by category)</a></li>


<br>



<p>Above API functions allow to create, handle and solve forward/inverse kinematics tasks for any type of mechanism (redundant/non-redundant, containing nested loops, etc.) fully programmatically, instead of using <a href="ikDialog.htm">CoppeliaSim's built-in kinematics functionality via the GUI</a>. </p>
<p>For examples on how to use above API functions, refer to the following scenes, <em>scenes/ik_fk_simple_examples/8-computingJointAnglesForRandomPoses.ttt</em> and <em>scenes/ik_fk_simple_examples/9-programmaticallySettingUpIk.ttt</em>, and make sure to inspect the attached child scripts.</p>

<br>
<br>
<h3 class=recommendedTopics>Recommended topics</h3>
<li><a href="inverseKinematicsModule.htm">Forward/inverse kinematics overview</a></li>
<li><a href="coppeliaKinematicsRoutines.htm">The Coppelia Kinematics Routines</a></li>

<br>
<br>
 </tr>
</table> 
</div>  


  
</body>

</html>
